import React from 'react';
import { stringifyRendererUrlQuery } from 'react-cosmos-core';
import { createPlugin } from 'react-plugin';
import { FullScreenButton } from './FullScreenButton.js';
const { namedPlug, register } = createPlugin({
    name: 'fullScreenButton',
});
namedPlug('rendererAction', 'fullScreen', ({ pluginContext, slotProps }) => {
    const { getMethodsOf } = pluginContext;
    const { fixtureId } = slotProps;
    const core = getMethodsOf('core');
    const rendererUrl = core.getWebRendererUrl();
    const onSelect = React.useCallback(() => {
        const query = stringifyRendererUrlQuery({ _fixtureId: fixtureId });
        const fixtureUrl = `${rendererUrl}?${query}`;
        window.open(fixtureUrl, '_blank');
    }, [fixtureId, rendererUrl]);
    React.useEffect(() => {
        return core.registerCommands({ goFullScreen: onSelect });
    }, [core, onSelect]);
    return rendererUrl ? React.createElement(FullScreenButton, { onClick: onSelect }) : null;
});
export { register };
if (process.env.NODE_ENV !== 'test')
    register();
