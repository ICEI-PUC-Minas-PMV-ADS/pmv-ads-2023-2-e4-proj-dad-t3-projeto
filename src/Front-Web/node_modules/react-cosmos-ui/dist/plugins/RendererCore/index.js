import { createPlugin } from 'react-plugin';
import { onRouterFixtureChange } from './onRouterFixtureChange.js';
import { receiveResponse } from './receiveResponse/index.js';
import { setFixtureState } from './setFixtureState.js';
const { on, register, onLoad } = createPlugin({
    name: 'rendererCore',
    defaultConfig: {
        fixtures: {},
    },
    initialState: {
        connectedRendererIds: [],
        primaryRendererId: null,
        fixtures: {},
        fixtureState: {},
    },
    methods: {
        getConnectedRendererIds,
        getPrimaryRendererId,
        getFixtures,
        getFixtureState,
        isRendererConnected,
        setFixtureState,
        selectPrimaryRenderer,
        receiveResponse,
    },
});
onLoad(({ getConfig, setState }) => {
    const { fixtures } = getConfig();
    setState(prevState => ({ ...prevState, fixtures }));
});
on('router', { fixtureChange: onRouterFixtureChange });
export { register };
if (process.env.NODE_ENV !== 'test')
    register();
function getConnectedRendererIds({ getState }) {
    return getState().connectedRendererIds;
}
function getPrimaryRendererId({ getState }) {
    return getState().primaryRendererId;
}
function getFixtures({ getState }) {
    return getState().fixtures;
}
function getFixtureState({ getState }) {
    return getState().fixtureState;
}
function isRendererConnected({ getState }) {
    return getState().connectedRendererIds.length > 0;
}
function selectPrimaryRenderer({ setState }, primaryRendererId) {
    setState(prevState => ({ ...prevState, primaryRendererId }));
}
