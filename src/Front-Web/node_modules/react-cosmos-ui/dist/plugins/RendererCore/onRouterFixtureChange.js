import { postSelectFixtureRequest, postUnselectFixtureRequest, } from './shared/postRequest.js';
export function onRouterFixtureChange(context, fixtureId) {
    if (fixtureId === null) {
        return context.setState(emptyFixtureState, () => {
            getConnectedRendererIds(context).forEach(rendererId => postUnselectFixtureRequest(context, rendererId));
        });
    }
    // Clear fixture state between fixtures
    context.setState(emptyFixtureState, () => {
        getConnectedRendererIds(context).forEach(rendererId => postSelectFixtureRequest(context, rendererId, fixtureId, {}));
    });
}
function getConnectedRendererIds(context) {
    return context.getState().connectedRendererIds;
}
function emptyFixtureState(prevState) {
    return { ...prevState, fixtureState: {} };
}
