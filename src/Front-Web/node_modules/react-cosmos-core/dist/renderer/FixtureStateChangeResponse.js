import { isEqual } from 'lodash-es';
import { useEffect } from 'react';
export function FixtureStateChangeResponse({ rendererId, rendererConnect, selectedFixture, setSelectedFixture, }) {
    const { fixtureId, fixtureState, syncedFixtureState } = selectedFixture;
    useEffect(() => {
        if (!isEqual(fixtureState, syncedFixtureState)) {
            rendererConnect.postMessage({
                type: 'fixtureStateChange',
                payload: {
                    rendererId,
                    fixtureId,
                    fixtureState,
                },
            });
            setSelectedFixture(prev => {
                // Ensure fixture state applies to currently selected fixture
                if (prev && isEqual(prev.fixtureId, fixtureId)) {
                    return { ...prev, syncedFixtureState: fixtureState };
                }
                else {
                    return prev;
                }
            });
        }
    }, [
        fixtureId,
        fixtureState,
        rendererConnect,
        rendererId,
        setSelectedFixture,
        syncedFixtureState,
    ]);
    return null;
}
