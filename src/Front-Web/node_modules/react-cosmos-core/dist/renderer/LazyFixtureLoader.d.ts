import { ReactElement } from 'react';
import { FixtureId } from '../fixture/types.js';
import { FixtureState, SetFixtureState } from '../fixtureState/types.js';
import { RendererConnect } from './rendererConnectTypes.js';
import { ByPath, LazyReactDecoratorWrapper, LazyReactFixtureWrapper, ReactDecorator } from './userModuleTypes.js';
type Props = {
    rendererId: string;
    rendererConnect: RendererConnect;
    fixtureWrapper: LazyReactFixtureWrapper;
    decorators: ByPath<LazyReactDecoratorWrapper>;
    systemDecorators: ReactDecorator[];
    fixtureId: FixtureId;
    fixtureState: FixtureState;
    setFixtureState: SetFixtureState;
    renderMessage: (msg: string) => ReactElement;
    renderKey: number;
    onErrorReset?: () => unknown;
};
export declare function LazyFixtureLoader({ rendererId, rendererConnect, fixtureWrapper, decorators, systemDecorators, fixtureId, fixtureState, setFixtureState, renderMessage, renderKey, onErrorReset, }: Props): JSX.Element | null;
export {};
