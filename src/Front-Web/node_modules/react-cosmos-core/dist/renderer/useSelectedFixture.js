import { useCallback, useState } from 'react';
export function useSelectedFixture(initialFixtureId, selectedFixtureId) {
    const [selectedFixture, setSelectedFixture] = useState(() => {
        const fixtureId = selectedFixtureId ?? initialFixtureId;
        if (!fixtureId)
            return null;
        return {
            fixtureId,
            fixtureState: {},
            syncedFixtureState: {},
            renderKey: 0,
        };
    });
    const setFixtureState = useCallback(stateUpdate => {
        setSelectedFixture(prevState => {
            if (!prevState) {
                console.warn('Trying to set fixture state with no fixture selected');
                return null;
            }
            return {
                ...prevState,
                fixtureState: stateUpdate(prevState.fixtureState),
            };
        });
    }, [setSelectedFixture]);
    return {
        selectedFixture,
        setSelectedFixture,
        setFixtureState,
    };
}
