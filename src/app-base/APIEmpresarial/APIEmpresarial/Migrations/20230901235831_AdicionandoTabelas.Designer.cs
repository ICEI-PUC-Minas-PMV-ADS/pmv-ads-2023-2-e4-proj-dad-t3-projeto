// <auto-generated />
using System;
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIEmpresarial.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230901235831_AdicionandoTabelas")]
    partial class AdicionandoTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APIEmpresarial.Model.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Entities.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("RecursosHumanosId")
                        .HasColumnType("int");

                    b.Property<double?>("Salario")
                        .IsRequired()
                        .HasColumnType("double");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("RecursosHumanosId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Entities.RecursosHumanos", b =>
                {
                    b.Property<int>("RecursosHumanosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("ImpostoFuncionario")
                        .HasColumnType("double");

                    b.HasKey("RecursosHumanosId");

                    b.ToTable("RecursHumanos");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Estoque", b =>
                {
                    b.Property<int>("EstoqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float?>("Quantidade")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("float");

                    b.HasKey("EstoqueId");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Gastos", b =>
                {
                    b.Property<int>("GastosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("TotalMes")
                        .HasColumnType("double");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("GastosId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Livro", b =>
                {
                    b.Property<int>("LivroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EstoqueId")
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Sinopse")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int?>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("LivroId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("VendaId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Vendas", b =>
                {
                    b.Property<int>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataVenda")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GastosId")
                        .HasColumnType("int");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int");

                    b.Property<double?>("ValorTotal")
                        .IsRequired()
                        .HasColumnType("double");

                    b.HasKey("VendaId");

                    b.HasIndex("GastosId");

                    b.ToTable("Vends");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Entities.Funcionario", b =>
                {
                    b.HasOne("APIEmpresarial.Model.Entities.RecursosHumanos", null)
                        .WithMany("_Funcionario")
                        .HasForeignKey("RecursosHumanosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIEmpresarial.Model.Livro", b =>
                {
                    b.HasOne("APIEmpresarial.Model.Categoria", "Categoria")
                        .WithMany("Livros")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIEmpresarial.Model.Estoque", "_Estoque")
                        .WithMany("_Livros")
                        .HasForeignKey("EstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIEmpresarial.Model.Vendas", "Venda")
                        .WithMany("Livros")
                        .HasForeignKey("VendaId");

                    b.Navigation("Categoria");

                    b.Navigation("Venda");

                    b.Navigation("_Estoque");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Vendas", b =>
                {
                    b.HasOne("APIEmpresarial.Model.Gastos", null)
                        .WithMany("_Vendas")
                        .HasForeignKey("GastosId");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Categoria", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Entities.RecursosHumanos", b =>
                {
                    b.Navigation("_Funcionario");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Estoque", b =>
                {
                    b.Navigation("_Livros");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Gastos", b =>
                {
                    b.Navigation("_Vendas");
                });

            modelBuilder.Entity("APIEmpresarial.Model.Vendas", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
